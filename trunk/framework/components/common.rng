<?xml version="1.0" encoding="UTF-8"?>
<!--
    
    ===========================================================================
    Copyright 2009 College of American Pathologists (CAP)
    
    This file is part of the "CAP Schemas for Synoptic Cancer Reports".
    
    The "CAP Schema for Synoptic Cancer Reports" is licensed under the Apache 
    License, Version 2.0 (the "License"); you may not use this file except in 
    compliance with the License.
    
    You may obtain a copy of the License at:
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software 
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    
    See the License for the specific language governing permissions and
    limitations under the License.
    ===========================================================================
    
-->
<!DOCTYPE grammar [
<!ENTITY response "response.rng">
]>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
   ns="http://www.cap.org/pert/2009/01/" xmlns="http://relaxng.org/ns/structure/1.0"
   xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
   xmlns:ecc="http://www.cap.org/pert/2009/01/"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:xi="http://www.w3.org/2001/XInclude">
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <a:documentation>This file contains definitions for a number of recurring patterns that are
      referenced throughout the project.</a:documentation>
   <a:documentation>This IS NOT a freestanding schema. It is used by inclusion in the "synopsis.rng"
      file, and the definitions it contains are referenced by several components.</a:documentation>
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <div>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <a:documentation>This division contains definitions for common patterns that are either (a)
         eCC-native elements allowed to appear as children of (nearly) every element in the project;
         (b) "hooks" for user customization.</a:documentation>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.content">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>A common element is defined as either an eCC-native common element, or a
            custom (user-defined) element.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <interleave>
            <ref name="common.core.content"/>
            <ref name="common.extension.content"/>
         </interleave>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.core.content">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>The eCC-native common elements can appear on (nearly) any element in the
            eCC schema. There are three such elements.</a:documentation>
         <a:documentation>The "comment" pattern allows for free-text comments, optionally
            interspersed with user-defined xml markup, to be attached to (nearly) any eCC
            element.</a:documentation>
         <a:documentation>The "label" pattern allows for the label that appeared in the
            pathologist's GUI to be preserved, even though that label may have been different from
            the "official" eCC datastring designating that name or value. It allows for free-text,
            optionally interspersed with user-defined xml markup.</a:documentation>
         <a:documentation>The "text" pattern allows report text that is not part of the eCC schema
            to be, as it were, "commented out". This is intended to assist users who wish to use the
            eCC schemas to mark up existing text reports in-line. It allows for free-text,
            optionally interspersed with user-defined xml markup.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <interleave>
            <optional>
               <element name="comment">
                  <mixed>
                     <ref name="common.extension.content"/>
                  </mixed>
               </element>
            </optional>
            <optional>
               <element name="label">
                  <mixed>
                     <ref name="common.extension.content"/>
                  </mixed>
               </element>
            </optional>
            <zeroOrMore>
               <element name="text">
                  <mixed>
                     <ref name="common.extension.content"/>
                  </mixed>
               </element>
            </zeroOrMore>
         </interleave>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.extension.content">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>This defines a pattern that supports inclusion in an instance of
            user-defined elements without "breaking" validation.</a:documentation>
         <a:documentation>The condition on these elements is that neither these elements, their
            attributes, their descendant elements and their descendant elements' attributes must all
            be in namespaces other than the eCC-reserved namespaces. They may have local
            names.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <zeroOrMore>
            <element>
               <anyName>
                  <except>
                     <!--<xi:include href="anyECCName.rng"/>-->
                     <choice xmlns="http://relaxng.org/ns/structure/1.0">
                        <nsName ns="http://www.cap.org/pert/2009/01/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/breast/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/colon/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/lung/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/prostate/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/pancreas/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/stomach/"/>
                        <nsName ns="http://www.cap.org/pert/2009/01/endometrium/"/>
                        <nsName ns="http://www.w3.org/2003/g/data-view#"/>
                        <nsName ns="http://www.rsna.org/reporting/2009/01/"/>
                        <nsName ns="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
                        <nsName ns="http://www.w3.org/XML/1998/namespace"/>
                     </choice>
                  </except>
               </anyName>
               <interleave>
                  <zeroOrMore>
                     <choice>
                        <ref name="common.extension.attrib"/>
                        <ref name="common.extension.content"/>
                     </choice>
                  </zeroOrMore>
               </interleave>
            </element>
         </zeroOrMore>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.attrib">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>A common attribute is defined as either an eCC-native common attribute, or
            a custom (user-defined) attribute.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <interleave>
            <ref name="common.core.attrib"/>
            <ref name="common.extension.attrib"/>
         </interleave>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.core.attrib">
         <a:documentation>We encourage the use of xml:ID as the preferred form of id elements on our
            content. This type definition ensures that ID uniqueness checking will be performed on
            these id's.</a:documentation>
         <optional>
            <attribute name="xml:id">
               <data type="ID"/>
            </attribute>
         </optional>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.extension.attrib">
         <zeroOrMore>
            <a:documentation>Any attribute with (a) a local name or (b) in a namespace other than
               the CAP eCC namespaces</a:documentation>
            <attribute>
               <anyName>
                  <except>
                     <choice>
                        <nsName ns=""/>
                        <!--<xi:include href="anyECCName.rng"/>-->
                        <choice>
                           <nsName ns="http://www.cap.org/pert/2009/01/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/breast/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/colon/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/lung/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/prostate/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/pancreas/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/stomach/"/>
                           <nsName ns="http://www.cap.org/pert/2009/01/endometrium/"/>
                           <nsName ns="http://www.w3.org/2003/g/data-view#"/>
                           <nsName ns="http://www.rsna.org/reporting/2009/01/"/>
                           <nsName ns="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
                           <nsName ns="http://www.w3.org/XML/1998/namespace"/>
                        </choice>
                     </choice>
                  </except>
               </anyName>
            </attribute>
         </zeroOrMore>
      </define>
   </div>
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <div>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <a:documentation>This division defines several common patterns that are reused in multiple
         locations throughout the project. This includes patterns for laterality, weight, length and
         size.</a:documentation>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.specify">
         <optional>
            <element name="specify">
               <ref name="common.specify.content"/>
               <ref name="common.specify.attrib"/>
            </element>
         </optional>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define combine="choice" name="common.specify.content">
         <text/>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define combine="interleave" name="common.specify.attrib">
         <empty/>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.laterality">
         <grammar>
            <include href="&response;">
               <define name="response.attrib">
                  <ref name="text-response.attrib"/>
               </define>
               <define name="response.text-value.valueset">
                  <parentRef name="common.laterality.valueset"/>
               </define>
            </include>
         </grammar>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.weight">
         <empty/>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.size">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>Patterns related to size and length are defined in chinese-box fashion, in
            such a way as to facilitate several levels of reuse.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <element name="size">
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <a:documentation>We define a reusable pattern presenting as an element named "size".
               This element name may not be appropriate in all circumstances, e.g. in one context it
               may be preferable to reuse the same content model, but rename the element
               "tumorSize".</a:documentation>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <interleave>
               <ref name="common.size.content"/>
               <ref name="common.content"/>
               <ref name="common.attrib"/>
            </interleave>
         </element>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.size.content">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>For cases such as described above, we allow reuse of the content in other
            wrappers.</a:documentation>
         <a:documentation>The model requires at least one dimension to be specified, and allows up
            to three.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <ref name="dimension"/>
         <optional>
            <ref name="dimension"/>
            <optional>
               <ref name="dimension"/>
            </optional>
         </optional>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="dimension">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>A "dimension" is defined as a kind of length. The element named "length"
            uses the same pattern, named "common.length.content", below.</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <element name="dimension">
            <interleave>
               <optional>
                  <attribute name="largest">
                     <ref name="common.response.valueset"/>
                  </attribute>
               </optional>
               <ref name="common.length.content"/>
               <ref name="common.content"/>
               <ref name="common.attrib"/>
            </interleave>
         </element>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="largestDimension">
         <element name="dimension">
            <interleave>
               <optional>
                  <attribute name="largest">
                     <value>true</value>
                  </attribute>
               </optional>
               <ref name="common.length.content"/>
               <ref name="common.content"/>
               <ref name="common.attrib"/>
            </interleave>
         </element>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.length">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>The element named "length" is just another name that can be applied to the
            same content as is inside the element named "dimension". (When part of a "size", we
            refer to it as a "dimension". When standing alone, we refer to it as a
            "length".)</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <element name="length">
            <interleave>
               <ref name="common.length.content"/>
               <ref name="common.content"/>
               <ref name="common.attrib"/>
            </interleave>
         </element>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
      <define name="common.length.content">
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <a:documentation>Here is the pattern for "length/dimension" contents. It allows for
            specification of (1) a "unit" and (2) a numerical "result".</a:documentation>
         <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
         <grammar>
            <include href="&response;">
               <define name="response.attrib">
                  <ref name="dimensional-response.attrib"/>
               </define>
               <define name="response.numeric-value.valueset">
                  <data type="decimal">
                     <param name="minExclusive">0.0</param>
                  </data>
               </define>
               <define name="response.unit.valueset">
                  <parentRef name="common.lengthUnit.valueset"/>
               </define>
            </include>
         </grammar>
      </define>
      <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   </div>
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
</grammar>
