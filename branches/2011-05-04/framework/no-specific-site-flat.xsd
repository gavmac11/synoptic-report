<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified"
    targetNamespace="http://purl.org/obbr/pathology/cancer/"
    xmlns="http://purl.org/obbr/pathology/cancer/"
    xmlns:nos="http://purl.org/obbr/pathology/cancer/noSite/"
    xmlns:obbr="http://purl.org/obbr/pathology/cancer/"
    xmlns:val="http://purl.org/obbr/pathology/cancer/"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!-- ============================================================= -->
    <!-- ============================================================= -->
    <!-- ============================================================= -->
    <!-- ============================================================= -->
    <!--<xs:import namespace="http://www.w3.org/XML/1998/namespace"/>-->
    <!-- ============================================================= -->
    <xs:simpleType name="empty">
        <xs:restriction base="xs:token">
            <xs:enumeration value="unreported"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="accessory.treatmentResponse.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="none"/>
            <xs:enumeration value="slight"/>
            <xs:enumeration value="marked"/>
            <xs:enumeration value="complete"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="extent.contiguousExtension.status.result.for.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="invades"/>
            <xs:enumeration value="adheres"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="extent.contiguousExtension.status.distance.for.values">
        <xs:union
            memberTypes="obbr:extent.contiguousExtension.status.result.for.values"
        />
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.priorTherapy.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="chemotherapy"/>
            <xs:enumeration value="radiation"/>
            <xs:enumeration value="surgery"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.pathologicFinding.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.clinicalFinding.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.radiologicFinding.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="margins.margin.status.result.for.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="in-situ"/>
            <xs:enumeration value="invasive"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="distant.status.of.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="liver"/>
            <xs:enumeration value="bone"/>
            <xs:enumeration value="lung"/>
            <xs:enumeration value="brain"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="distant.status.result.for.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="this accession"/>
            <xs:enumeration value="prior accession"/>
            <xs:enumeration value="outside report"/>
            <xs:enumeration value="clinical history"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="nodes.status.result.for.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="negative"/>
            <xs:enumeration value="positive"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="nodes.status.result.type.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="necroinflammatory"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="nodes.status.technique.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="H+E one level"/>
            <xs:enumeration value="H+E multiple level(s)"/>
            <xs:enumeration value="H+E plus immunohistochemistry"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="specimen.integrity.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="intact"/>
            <xs:enumeration value="fragmented"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="stage.prefix.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="y"/>
            <xs:enumeration value="r"/>
            <xs:enumeration value="a"/>
            <xs:enumeration value="none"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="stage.pT.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="stage.pN.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="stage.pM.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="stage.group.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="tumor.grade.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
            <xs:enumeration value="3"/>
            <xs:enumeration value="4"/>
            <xs:enumeration value="X"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="tumor.gradeSystem.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="4-grade"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="tumor.focus.type.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="principal"/>
            <xs:enumeration value="sole"/>
            <xs:enumeration value="additional"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="tumor.site.values">
        <xs:union memberTypes="obbr:empty"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <!-- GENERIC DERIVED SIMPLE TYPE USING FACET -->
    <!-- ============================================================= -->
    <xs:simpleType name="positiveDecimal">
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.0"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <!-- GENERIC ENUMERATIONS -->
    <!-- ============================================================= -->
    <xs:simpleType name="base.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="specify"/>
            <xs:enumeration value="inapplicable"/>
            <xs:enumeration value="unreported"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="focality.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="microfocal"/>
            <xs:enumeration value="unifocal"/>
            <xs:enumeration value="multifocal"/>
            <xs:enumeration value="extensive"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="laterality.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="ipsilateral"/>
            <xs:enumeration value="contralateral"/>
            <xs:enumeration value="right"/>
            <xs:enumeration value="left"/>
            <xs:enumeration value="midline"/>
            <xs:enumeration value="bilateral"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="lengthUnit.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="cm"/>
            <xs:enumeration value="mm"/>
            <xs:enumeration value="in"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="multiplicity.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
            <xs:enumeration value="3"/>
            <xs:enumeration value="4"/>
            <xs:enumeration value="m"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="qualitative.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="positive"/>
            <xs:enumeration value="negative"/>
            <xs:enumeration value="equivocal"/>
            <xs:enumeration value="indeterminate"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="relation.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="less than"/>
            <xs:enumeration value="less than or equal"/>
            <xs:enumeration value="equal"/>
            <xs:enumeration value="approximately equal"/>
            <xs:enumeration value="greater than or equal"/>
            <xs:enumeration value="greater than"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="weightUnit.values">
        <xs:restriction base="xs:token">
            <xs:enumeration value="mg"/>
            <xs:enumeration value="g"/>
            <xs:enumeration value="kg"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================================================= -->
    <!-- GENERIC UNION TYPES -->
    <!-- ============================================================= -->
    <xs:simpleType name="date.valueset">
        <xs:union memberTypes="xs:date xs:gYearMonth xs:gYear"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="focality.valueset">
        <xs:union memberTypes="val:focality.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="laterality.valueset">
        <xs:union memberTypes="val:base.values val:laterality.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="lengthUnit.valueset">
        <xs:union memberTypes="val:lengthUnit.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="multiplicity.valueset">
        <xs:union memberTypes="val:multiplicity.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="qualitative.valueset">
        <xs:union memberTypes="val:base.values val:qualitative.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="relation.valueset">
        <xs:union memberTypes="val:relation.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="scalar.valueset">
        <xs:union memberTypes="obbr:base.values obbr:positiveDecimal"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="tally.valueset">
        <xs:union memberTypes="obbr:base.values xs:nonNegativeInteger"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="weightUnit.valueset">
        <xs:union memberTypes="val:weightUnit.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <!-- GENERIC GROUPS ("DEFINES") -->
    <!-- ============================================================= -->
    <xs:group name="generic.content">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="specify"
                type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="label"
                type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="comment"
                type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                processContents="skip"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="length">
        <xs:sequence>
            <xs:element form="qualified" name="response">
                <xs:complexType>
                    <xs:group ref="obbr:generic.content"/>
                    <xs:attributeGroup ref="obbr:quantity"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="size">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="3" minOccurs="1"
                name="response">
                <xs:complexType>
                    <xs:group ref="obbr:generic.content"/>
                    <xs:attributeGroup ref="obbr:quantity"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <!-- GENERIC ATTRIBUTES -->
    <!-- ============================================================= -->
    <xs:attributeGroup name="generic.attrib">
        <xs:attribute ref="xml:id"/>
        <xs:anyAttribute namespace="##other"/>
    </xs:attributeGroup>
    <!-- ============================================================= -->
    <!-- GENERIC ATTRIBUTE GROUPS ("RESPONSE TYPES") -->
    <!-- ============================================================= -->
    <xs:attributeGroup name="date">
        <xs:attribute name="date" type="obbr:date.valueset"/>
        <xs:attribute name="start" type="obbr:date.valueset"/>
        <xs:attribute name="end" type="obbr:date.valueset"/>
        <xs:attribute name="duration" type="xs:duration"/>
    </xs:attributeGroup>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:attributeGroup name="quantity">
        <xs:attribute name="value" type="obbr:scalar.valueset" use="required"/>
        <xs:attribute name="unit" type="obbr:lengthUnit.valueset" use="required"/>
        <xs:attribute name="relation" type="obbr:relation.valueset"/>
    </xs:attributeGroup>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:attributeGroup name="tally">
        <xs:attribute name="value" type="obbr:tally.valueset" use="required"/>
        <xs:attribute name="relation" type="obbr:relation.valueset"/>
    </xs:attributeGroup>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:attributeGroup name="weight">
        <xs:attribute name="value" type="obbr:scalar.valueset" use="required"/>
        <xs:attribute name="unit" type="obbr:weightUnit.valueset" use="required"/>
        <xs:attribute name="relation" type="obbr:relation.valueset"/>
    </xs:attributeGroup>
    <!-- ============================================================= -->
    <xs:simpleType name="accessory.lymphvascularInvasion.valueset">
        <xs:union memberTypes="val:base.values val:qualitative.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="accessory.perineuralInvasion.valueset">
        <xs:union memberTypes="val:base.values val:qualitative.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="accessory.treatmentResponse.valueset">
        <xs:union
            memberTypes="val:base.values val:accessory.treatmentResponse.values"
        />
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="additional.finding.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="additional.finding.of.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="extent.contiguousExtension.status.result.for.valueset">
        <xs:union
            memberTypes="val:extent.contiguousExtension.status.result.for.values"
        />
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType
        name="extent.contiguousExtension.status.distance.for.valueset">
        <xs:union
            memberTypes="val:extent.contiguousExtension.status.distance.for.values"
        />
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="extent.status.of.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.priorTherapy.valueset">
        <xs:union memberTypes="val:base.values val:history.priorTherapy.values"
        />
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.pathologicFinding.valueset">
        <xs:union
            memberTypes="val:base.values val:history.pathologicFinding.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.clinicalFinding.valueset">
        <xs:union
            memberTypes="val:base.values val:history.clinicalFinding.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="history.radiologicFinding.valueset">
        <xs:union
            memberTypes="val:base.values val:history.radiologicFinding.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="margins.margin.status.focality.valueset">
        <xs:union memberTypes="val:base.values val:focality.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="margins.margin.status.of.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="margins.margin.status.result.for.valueset">
        <xs:union
            memberTypes="val:base.values val:margins.margin.status.result.for.values"
        />
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="margins.margin.distance.for.valueset">
        <xs:union memberTypes="val:margins.margin.status.result.for.valueset"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="margins.margin.distance.from.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="distant.status.of.valueset">
        <xs:union memberTypes="val:distant.status.of.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="distant.status.result.for.valueset">
        <xs:union memberTypes="val:distant.status.result.for.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="nodes.status.result.for.valueset">
        <xs:union memberTypes="val:nodes.status.result.for.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="nodes.status.result.type.valueset">
        <xs:union
            memberTypes="val:base.values val:nodes.status.result.type.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="nodes.status.of.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="nodes.status.technique.valueset">
        <xs:union memberTypes="val:nodes.status.technique.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="nodes.status.extracapsular.valueset">
        <xs:union memberTypes="val:base.values val:qualitative.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="specimen.procedure.response.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="specimen.integrity.valueset">
        <xs:union memberTypes="val:base.values val:specimen.integrity.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="specimen.site.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="stage.prefix.valueset">
        <xs:union memberTypes="val:stage.prefix.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="stage.pT.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="stage.pN.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="stage.pM.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="stage.group.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ============================================================= -->
    <xs:simpleType name="tumor.histologicType.valueset">
        <xs:union memberTypes="val:base.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="tumor.focus.type.valueset">
        <xs:union memberTypes="val:tumor.focus.type.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="tumor.grade.valueset">
        <xs:union memberTypes="val:base.values val:tumor.grade.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="tumor.gradeSystem.valueset">
        <xs:union memberTypes="val:base.values val:tumor.gradeSystem.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="tumor.site.valueset">
        <xs:union memberTypes="val:base.values val:tumor.site.values"/>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- ============================================================= -->
    <xs:element name="diagnosis">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="generic.content"/>
                <xs:group ref="diagnosis.section.content"/>
            </xs:sequence>
            <xs:attributeGroup ref="generic.attrib"/>
            <xs:attribute name="schemaLocation" type="xs:anyURI" use="required"/>
            <xs:attribute name="version" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="diagnosis.section.content">
        <xs:sequence>
            <xs:group ref="history.section"/>
            <xs:group ref="specimen.section"/>
            <xs:group ref="tumor.section"/>
            <xs:group ref="extent.section"/>
            <xs:group ref="accessory.section"/>
            <xs:group ref="margins.section"/>
            <xs:group ref="nodes.section"/>
            <xs:group ref="distant.section"/>
            <xs:group ref="studies.section"/>
            <xs:group ref="stage.section"/>
            <xs:group ref="additional.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="accessory.section">
        <xs:sequence>
            <xs:element name="accessory">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="accessory.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.section.content">
        <xs:sequence>
            <xs:group ref="accessory.treatmentResponse.item"/>
            <xs:group ref="accessory.lymphvascularInvasion.item"/>
            <xs:group ref="accessory.perineuralInvasion.item"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.treatmentResponse.item">
        <xs:sequence>
            <xs:element minOccurs="0" name="treatmentResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="accessory.treatmentResponse.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.lymphvascularInvasion.item">
        <xs:sequence>
            <xs:element minOccurs="0" name="lymphvascularInvasion">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="accessory.lymphvascularInvasion.response"
                        />
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.perineuralInvasion.item">
        <xs:sequence>
            <xs:element minOccurs="0" name="perineuralInvasion">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="accessory.perineuralInvasion.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.treatmentResponse.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="accessory.treatmentResponse.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.lymphvascularInvasion.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="accessory.lymphvascularInvasion.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="accessory.perineuralInvasion.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="accessory.perineuralInvasion.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="additional.section">
        <xs:sequence>
            <xs:element name="additional">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="additional.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="additional.section.content">
        <xs:sequence>
            <xs:group ref="additional.finding.item"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="additional.finding.item">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="finding">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="additional.finding.response"/>
                    </xs:sequence>
                    <xs:attribute name="of"
                        type="additional.finding.of.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="additional.finding.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="additional.finding.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="distant.section">
        <xs:sequence>
            <xs:element name="distant">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="distant.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="distant.section.content">
        <xs:sequence>
            <xs:group maxOccurs="unbounded" minOccurs="0"
                ref="distant.status.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="distant.status.section">
        <xs:sequence>
            <xs:element name="status">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="distant.status.section.content"/>
                        <xs:group minOccurs="0" ref="size"/>
                    </xs:sequence>
                    <xs:attribute name="of" type="distant.status.of.valueset"
                        use="required"/>
                    <xs:attribute name="on" type="laterality.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="distant.status.section.content">
        <xs:sequence>
            <xs:group ref="distant.status.result.item"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="distant.status.result.item">
        <xs:sequence>
            <xs:element name="result">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="distant.status.result.response"/>
                    </xs:sequence>
                    <xs:attribute name="for"
                        type="distant.status.result.for.valueset"/>
                    <xs:attributeGroup ref="date"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="distant.status.result.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="qualitative.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="extent.section">
        <xs:sequence>
            <xs:element name="extent">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="extent.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="extent.section.content">
        <xs:sequence>
            <xs:group maxOccurs="unbounded"
                ref="extent.contiguousExtension.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="extent.contiguousExtension.section">
        <xs:sequence>
            <xs:element name="contiguousExtension">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group maxOccurs="unbounded" minOccurs="0"
                            ref="extent.contiguousExtension.status.section"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="extent.contiguousExtension.status.section">
        <xs:sequence>
            <xs:element name="status">
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:group ref="generic.content"/>
                        <xs:group maxOccurs="2"
                            ref="extent.contiguousExtension.status.result.item"/>
                        <xs:group maxOccurs="2" minOccurs="0"
                            ref="extent.contiguousExtension.status.distance.item"
                        />
                    </xs:sequence>
                    <xs:attribute name="of" type="extent.status.of.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="extent.contiguousExtension.status.result.item">
        <xs:sequence>
            <xs:element name="result">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group maxOccurs="unbounded" minOccurs="0"
                            ref="extent.contiguousExtension.status.result.response"
                        />
                    </xs:sequence>
                    <xs:attribute name="for"
                        type="extent.contiguousExtension.status.result.for.valueset"/>
                    <xs:attribute name="on" type="laterality.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="extent.contiguousExtension.status.distance.item">
        <xs:sequence>
            <xs:element name="distance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="length"/>
                    </xs:sequence>
                    <xs:attribute name="for"
                        type="extent.contiguousExtension.status.distance.for.valueset"/>
                    <xs:attribute name="from" type="val:base.values"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="extent.contiguousExtension.status.result.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="qualitative.valueset"
                        use="required"/>
                    <xs:attribute name="extent" type="focality.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="history.section">
        <xs:sequence>
            <xs:element name="history">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="history.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.section.content">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:group ref="history.clinicalFinding.item"/>
                <xs:group ref="history.pathologicFinding.item"/>
                <xs:group ref="history.priorTherapy.item"/>
                <xs:group ref="history.radiologicFinding.item"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.clinicalFinding.item">
        <xs:sequence>
            <xs:element name="clinicalFinding">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="history.clinicalFinding.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="date"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.pathologicFinding.item">
        <xs:sequence>
            <xs:element name="pathologicFinding">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="history.pathologicFinding.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="date"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.priorTherapy.item">
        <xs:sequence>
            <xs:element name="priorTherapy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="history.priorTherapy.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="date"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.radiologicFinding.item">
        <xs:sequence>
            <xs:element name="radiologicFinding">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="history.radiologicFinding.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="date"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.clinicalFinding.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="history.clinicalFinding.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.pathologicFinding.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="history.pathologicFinding.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.priorTherapy.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="history.priorTherapy.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="history.radiologicFinding.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="history.radiologicFinding.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="margins.section">
        <xs:sequence>
            <xs:element name="margins">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group maxOccurs="unbounded"
                            ref="margins.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.section.content">
        <xs:sequence>
            <xs:group maxOccurs="unbounded" ref="margins.margin.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.margin.section">
        <xs:sequence>
            <xs:element name="margin">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="margins.margin.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.margin.section.content">
        <xs:sequence>
            <xs:group ref="margins.margin.status.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.margin.status.section">
        <xs:sequence>
            <xs:element name="status">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="margins.margin.status.result.item"/>
                        <xs:group minOccurs="0"
                            ref="margins.margin.distance.item"/>
                    </xs:sequence>
                    <xs:attribute name="of"
                        type="margins.margin.status.of.valueset" use="required"/>
                    <xs:attribute name="on" type="laterality.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.margin.distance.item">
        <xs:sequence>
            <xs:element name="distance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="length"/>
                    </xs:sequence>
                    <xs:attribute name="for"
                        type="margins.margin.distance.for.valueset"
                        use="required"/>
                    <!--<xs:attribute name="from" type="margins.margin.distance.from.valueset"/>-->
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.margin.status.result.item">
        <xs:sequence>
            <xs:element name="result">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="margins.margin.status.result.response"/>
                    </xs:sequence>
                    <xs:attribute name="for"
                        type="margins.margin.status.result.for.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="margins.margin.status.result.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="qualitative.valueset"
                        use="required"/>
                    <xs:attribute name="extent" type="focality.valueset"/>
                    <xs:attribute name="closest" type="qualitative.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="nodes.section">
        <xs:sequence>
            <xs:element name="nodes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="nodes.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.section.content">
        <xs:sequence>
            <xs:group maxOccurs="unbounded" minOccurs="0"
                ref="nodes.status.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.status.section">
        <xs:sequence>
            <xs:element name="status">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="nodes.status.result.section"/>
                        <xs:group ref="nodes.status.largestMetastasis.item"/>
                        <xs:group ref="nodes.status.extracapsularExtension.item"
                        />
                    </xs:sequence>
                    <xs:attribute name="of" type="nodes.status.of.valueset"
                        use="required"/>
                    <xs:attribute name="on" type="laterality.valueset"/>
                    <xs:attribute name="technique"
                        type="nodes.status.technique.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.status.result.section">
        <xs:sequence>
            <xs:element name="result">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="nodes.status.result.response"/>
                    </xs:sequence>
                    <xs:attribute name="for"
                        type="nodes.status.result.for.valueset" use="required"/>
                    <xs:attribute name="type"
                        type="nodes.status.result.type.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.status.largestMetastasis.item">
        <xs:sequence>
            <xs:element name="largestMetastasis">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="size"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.status.extracapsularExtension.item">
        <xs:sequence>
            <xs:element name="extracapsularExtension">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="nodes.extracapsularExtension.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.extracapsularExtension.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="qualitative.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="nodes.status.result.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attributeGroup ref="tally"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="specimen.section">
        <xs:sequence>
            <xs:element name="specimen">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="specimen.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.section.content">
        <xs:sequence>
            <xs:group ref="specimen.procedure.item"/>
            <xs:group ref="specimen.size.item"/>
            <xs:group minOccurs="0" ref="specimen.weight.item"/>
            <xs:group ref="specimen.site.item"/>
            <xs:group minOccurs="0" ref="specimen.integrity.item"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.procedure.item">
        <xs:sequence>
            <xs:element name="procedure">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="specimen.procedure.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.procedure.response">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="specimen.procedure.response.valueset"
                        use="required"/>
                    <xs:attribute name="on" type="laterality.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.size.item">
        <xs:sequence>
            <xs:element name="size">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="specimen.size.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.size.response">
        <xs:sequence>
            <xs:group ref="size"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.weight.item">
        <xs:sequence>
            <xs:element name="weight">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="specimen.weight.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.weight.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attributeGroup ref="weight"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.site.item">
        <xs:sequence>
            <xs:element name="site">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="specimen.site.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.site.response">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="specimen.site.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.integrity.item">
        <xs:sequence>
            <xs:element name="integrity">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="specimen.integrity.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="specimen.integrity.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value"
                        type="specimen.integrity.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="stage.section">
        <xs:sequence>
            <xs:element name="stage">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="stage.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.section.content">
        <xs:sequence>
            <xs:group ref="stage.prefix.item"/>
            <xs:group ref="stage.multiplicity.item"/>
            <xs:group ref="stage.pT.item"/>
            <xs:group ref="stage.pN.item"/>
            <xs:group ref="stage.pM.item"/>
            <xs:group ref="stage.group.item"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.prefix.item">
        <xs:sequence>
            <xs:element name="prefix">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="stage.prefix.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.prefix.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="stage.prefix.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.multiplicity.item">
        <xs:sequence>
            <xs:element name="multiplicity">
                <xs:complexType>
                    <xs:group ref="stage.multiplicity.response"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.multiplicity.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="multiplicity.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.pT.item">
        <xs:sequence>
            <xs:element name="pT">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="stage.pT.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.pT.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="stage.pT.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.pN.item">
        <xs:sequence>
            <xs:element name="pN">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="stage.pN.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.pN.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="stage.pN.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.pM.item">
        <xs:sequence>
            <xs:element name="pM">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="stage.pM.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.pM.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="stage.pM.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.group.item">
        <xs:sequence>
            <xs:element name="group">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="stage.group.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="stage.group.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="stage.group.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="studies.section">
        <xs:sequence>
            <xs:element name="studies">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="studies.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="studies.section.content">
        <xs:sequence>
            <xs:element name="study">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="studies.study.item"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="studies.study.item">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="study">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="studies.study.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="studies.study.response">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="xs:token" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ============================================================= -->
    <xs:group name="tumor.section">
        <xs:sequence>
            <xs:element name="tumor">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="tumor.section.content"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.section.content">
        <xs:sequence>
            <xs:group maxOccurs="unbounded" ref="tumor.focus.section"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.focus.section">
        <xs:sequence>
            <xs:element name="focus">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="tumor.site.item"/>
                        <xs:group ref="tumor.size.item"/>
                        <xs:group ref="tumor.histologicType.item"/>
                        <xs:group ref="tumor.grade.item"/>
                    </xs:sequence>
                    <xs:attribute name="type" type="tumor.focus.type.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.histologicType.item">
        <xs:sequence>
            <xs:element name="histologicType">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="tumor.histologicType.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.size.item">
        <xs:sequence>
            <xs:element name="size">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="tumor.size.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.size.response">
        <xs:sequence>
            <xs:group ref="size"/>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.grade.item">
        <xs:sequence>
            <xs:element name="grade">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="tumor.grade.response"/>
                    </xs:sequence>
                    <xs:attribute name="system"
                        type="tumor.gradeSystem.valueset" use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.histologicType.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" use="required">
                        <xs:simpleType>
                            <xs:union
                                memberTypes="val:base.values tumor.histologicType.valueset"
                            />
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.grade.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="tumor.grade.valueset"
                        use="required"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.site.item">
        <xs:sequence>
            <xs:element name="site">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="generic.content"/>
                        <xs:group ref="tumor.site.response"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:group name="tumor.site.response">
        <xs:sequence>
            <xs:element name="response">
                <xs:complexType>
                    <xs:group ref="generic.content"/>
                    <xs:attribute name="value" type="tumor.site.valueset"
                        use="required"/>
                    <xs:attribute name="on" type="laterality.valueset"/>
                    <xs:attributeGroup ref="generic.attrib"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
</xs:schema>
